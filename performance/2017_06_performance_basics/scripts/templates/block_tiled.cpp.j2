{% extends "base.cpp.j2" %}

{# block-tiled implementation with configurable variables and block size #}

{% block mmm_loop %}
const int block_size = {{ block_size }};

for (int {{ var1 }} = 0; {{ var1 }} < N; {{ var1 }} += block_size) {
    for (int {{ var2 }} = 0; {{ var2 }} < N; {{ var2 }} += block_size) {
        for (int {{ var3 }} = 0; {{ var3 }} < N; {{ var3 }} += block_size) {

            for (int ii = {{ var1 }}; ii < ({{ var1 }} + block_size); ii++) {
                for (int kk = {{ var2 }}; kk < ({{ var2 }} + block_size); kk++) {
                    for (int jj = {{ var3 }}; jj < ({{ var3 }} + block_size); jj++) {
                        C[ii][jj] += A[ii][kk] * B[kk][jj];
                    }
                }
            }
        }
    }
}
{% endblock %}
